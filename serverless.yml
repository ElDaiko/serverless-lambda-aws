service: aws-lambda-serverless

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  iam:
    role:
      statements:  
        - Effect: Allow
          Action: 
            - dynamodb:*
            - sns:Publish  # Permite a la función Lambda publicar en SNS
          Resource: 
            - arn:aws:dynamodb:us-west-2:864817670822:table/usersTable  
            - "*"  # Permiso para cualquier recurso de SNS (modificar según sea necesario)

functions:
  getUser:
    handler: src/index.getUser
    events:
      - httpApi:
          path: /users
          method: get

  addUser:
    handler: src/index.addUser
    events:
      - httpApi:
          path: /users
          method: post

  updateUser:
    handler: src/index.updateUser
    events:
      - httpApi:
          path: /users/{id}
          method: put

  deleteUser:
    handler: src/index.deleteUser
    events:
      - httpApi:
          path: /users/{id}
          method: delete

  sendNotificationByEmail:   # Agrega la configuración para la función sendNotificationByEmail
    handler: src/index.sendNotificationByEmail
    events:
      - httpApi:
          path: /mail
          method: post

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    snsTopic:  # Agrega un nuevo recurso para el tema de SNS
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: UserNotificationTopic
        TopicName: UserNotificationTopic

